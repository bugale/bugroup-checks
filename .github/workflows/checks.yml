name: Checks
on:
  - pull_request
jobs:
  check-dist:
    name: Check dist/
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Dependencies
        run: npm clean-install
      - name: Build dist/ Directory
        run: npm run package
      - name: Compare Expected and Actual Directories
        id: diff
        run: |
          if [ "$(git diff --ignore-space-at-eol --text dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff --ignore-space-at-eol --text dist/
            exit 1
          fi
      - uses: actions/upload-artifact@v3
        if: ${{ failure() && steps.diff.conclusion == 'failure' }}
        with:
          name: dist
          path: dist/
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Dependencies
        run: npm clean-install; npm install @microsoft/eslint-formatter-sarif
      - name: Run ESLint
        run: npx eslint . --format @microsoft/eslint-formatter-sarif --output-file lint.sarif
      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: lint.sarif
  markdownlint:
    name: markdownlint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Lint
        uses: avto-dev/markdown-lint@v1
        with:
          args: '**/*.md'
          output: 'lint.txt'
          config: '.mdl.yml'
      - name: Convert
        uses: bugale/bugalint@v2
        if: always()
        with:
          inputFile: 'lint.txt'
          toolName: 'mdl'
          inputFormat: 'mdl'
      - name: Upload results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: sarif.json
  required:
    name: Required Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: ./
        with:
          checks: |-
            Check .*
            ESLint
            markdown.*
          self: Required Checks
  check-commits:
    name: Check Commits
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: npm install -g @commitlint/cli @commitlint/config-conventional conventional-changelog-conventionalcommits
      - name: Get Base
        id: get-base
        run: |-
          count=$(gh api "/repos/${{ github.repository }}/pulls/${{ github.event.number }}/commits" --jq "length")
          req=$(($count + 1))
          echo "count: $count, req: $req"
          echo "commit-count=$count" >> $GITHUB_OUTPUT
          echo "required=$req" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: ${{ steps.get-base.outputs.required }}
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Check Commits
        run: commitlint --from ${{ github.event.pull_request.head.sha }}~${{ steps.get-base.outputs.commit-count }} --to ${{ github.event.pull_request.head.sha }}
